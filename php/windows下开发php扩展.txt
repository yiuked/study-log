说明，根据要求选择你的开发工具.
Visual C++ 9.0 (Visual Studio 2008 or Visual C++ 2008) for PHP 5.4.
Visual C++ 11.0 (Visual Studio 2012) for PHP 5.5 or 5.6.
Visual C++ 14.0 (Visual Studio 2015) for PHP 7.0+.


	
准备工具
1.PHP-SDK,文件格式(php-sdk-binary-tools-YYYYMMDD.zip)，选择最新的下载.
http://windows.php.net/downloads/php-sdk/php-sdk-binary-tools-20110915.zip

2.下载PHP依赖文件,文件格式(deps-<php version>-<vc version>-<architecture>.7z)选择你要编译的版本
http://windows.php.net/downloads/php-sdk/deps-5.5-vc11-x86.7z

3.下载PHP源文件
http://windows.php.net/downloads/releases/archives/php-5.5.12-src.zip

4.安装VS,根据说明里的环境要求自行下载VS版本,我使用的php5.5.12,安装VS2012

执行
在开始菜单栏(VS2012->Visual Studio Tools)里选择
VS2012 x86/x64 Native Tools Command Prompt
注意一定要选择与你编译的php版本位数一至（运行时一定要使用管理员身份运行）
c:\> mkdir php-sdk
c:\> cd php-sdk
将php-sdk-binary-tools-20110915.zip解压，并将文件复制到c:\php-sdk目录
c:\php-sdk> bin\phpsdk_buildtree.bat phpdev

生成的phpdev目录下没有产生vc11目录，于是复制vc9改名为vc11
将deps-5.5-vc11-x86.7z解压
复制到C:\php-sdk\phpdev\vc11\deps目录。
将php-5.5.12-src.zip解压
复制到C:\php-sdk\phpdev\vc11\php-5.5.12-src目录
接下来
c:\php-sdk> bin\phpsdk_setvars.bat
c:\php-sdk> cd C:\php-sdk\phpdev\vc11\x86\php-5.5.12-src

修改ext/ext_skel_win32.php文件中的cygwin_path为你当前cygwin的bin目录
$cygwin_path = 'C:\cygwin64\bin';

必须先进入ext目录
C:\php-sdk\phpdev\vc11\x86\php-5.5.12-src> cd ext
C:\php-sdk\phpdev\vc11\x86\php-5.5.12-src\ext> php ext_skel_win32.php --extname=mytest
Creating directory array_square_sum
Creating basic files: config.m4 config.w32 .svnignore array_square_sum.c php_array_square_sum.h CREDITS EXPERIMENTAL tests/001.phpt array_square_sum.php [done].

To use your new extension, you will have to execute the following steps:

1.  $ cd ..
2.  $ vi ext/mytest/config.m4
3.  $ ./buildconf
4.  $ ./configure --[with|enable]-mytest
5.  $ make
6.  $ ./php -f ext/mytest/mytest.php
7.  $ vi ext/mytest/mytest.c
8.  $ make

Repeat steps 3-6 until you are satisfied with ext/array_square_sum/config.m4 and
step 6 confirms that your module is compiled into PHP. Then, start writing
code and repeat the last two steps as often as necessary.

命令执行完后，会在ext目录下自动生成模板文件。
此时如何你是在linux下需要修改ext/mytest/config.m4文件，
windows下需要修改ext/mytest/config.w32文件
以config.w32为列
// If your extension references something external, use ARG_WITH
//ARG_WITH("array_square_sum", "for array_square_sum support", "no");

// Otherwise, use ARG_ENABLE
//ARG_ENABLE("array_square_sum", "enable array_square_sum support", "no");
引用以下解释：
./configure --help 就能看到这些配置项的说明.其实大部分对应的就是PHP源代码ext下的各个扩展.--enable开头的表示这个扩展不依赖第三方的库,典型的如 --enable-opcache.--with开头的表示这个扩展依赖第三方的库,像--with-curl就依赖第三方的libcurl库,系统需要 安装这个库的开发包(头文件,共享库so文件,静态库a文件)才能通过configure配置.

用于生成PECL扩展源码骨架的脚本php-src/ext/ext_skel里说到(其中dnl是注释符号):
dnl If your extension references something external, use with:
dnl PHP_ARG_WITH($extname, for $extname support,
dnl Make sure that the comment is aligned:
dnl [  --with-$extname             Include $extname support])

dnl Otherwise use enable:
dnl PHP_ARG_ENABLE($extname, whether to enable $extname support,
dnl Make sure that the comment is aligned:
dnl [  --enable-$extname           Enable $extname support])


修改完成后

C:\php-sdk\phpdev\vc11\x86\php-5.5.12-src> buildconf
C:\php-sdk\phpdev\vc11\x86\php-5.5.12-src> configure --help (这里可能会出现一个JS语法错误，根据提示，发现是多了一个注释符号，去年就OK了)
C:\php-sdk\phpdev\vc11\x86\php-5.5.12-src> configure --disable-all --enable-cli --enable-pdo=mytest 
=shared意思是以dll形式生成，否则就和php集成在一起了,如果提示bison.exe不存在，执行命令，再重新执行下面的操作（经过上面的配置后,bison.exe应该在 c:\php_sdk\bin目录下 ， 把这个目录放到环境变量中就行了）
C:\php-sdk\phpdev\vc11\x86\php-5.5.12-src> set path=%path%;C:\php-sdk\bin
C:\php-sdk\phpdev\vc11\x86\php-5.5.12-src> nmake


参考文献:
http://www.oschina.net/question/1161256_2148556
https://wiki.php.net/internals/windows/stepbystepbuild